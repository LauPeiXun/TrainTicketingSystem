
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author celyn
 */
public class ReportInterface extends javax.swing.JFrame {

    public ReportInterface() {
        initComponents();
        display();
    }

    private void display() {
        double total = 0;
        try (BufferedReader reader = new BufferedReader(new FileReader("passenger.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] columns = line.split("\\|"); // Split the line into columns
                total += Double.parseDouble(columns[4]);
            }
            displayBalance.setText(Double.toString(total));
        } catch (IOException ex) {
            System.out.println("An error occurred while reading from the file.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        report = new javax.swing.JTable();
        title = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        totalSold = new javax.swing.JLabel();
        totalTicketQty = new javax.swing.JTextField();
        totalPrice = new javax.swing.JLabel();
        totalSales = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        displayBalance = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        filterdate = new javax.swing.JLabel();
        daily = new com.toedter.calendar.JDateChooser();
        filtermonth = new javax.swing.JLabel();
        view = new javax.swing.JButton();
        monthly = new javax.swing.JComboBox<>();
        back = new javax.swing.JButton();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        report.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Train ID", "Route", "Date", "Ticket Price (RM)", "Passenger name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(report);

        title.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        title.setText("Train Report");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        totalSold.setText("Total Ticket Sold (unit) :");

        totalTicketQty.setEditable(false);

        totalPrice.setText("Total Sales (RM) :");

        totalSales.setEditable(false);

        jLabel1.setText("System Balance (RM):");

        displayBalance.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalPrice)
                    .addComponent(totalSold)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(totalTicketQty)
                    .addComponent(totalSales)
                    .addComponent(displayBalance, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalSold)
                    .addComponent(totalTicketQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalPrice)
                    .addComponent(totalSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        filterdate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        filterdate.setText("Date :");

        filtermonth.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        filtermonth.setText("Month :");

        view.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        view.setText("View");
        view.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        monthly.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--ALL--", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(filterdate)
                .addGap(18, 18, 18)
                .addComponent(daily, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(filtermonth)
                .addGap(18, 18, 18)
                .addComponent(monthly, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(view, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(daily, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(filtermonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(monthly, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(view, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                    .addComponent(filterdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8))
        );

        back.setText("Back");
        back.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(back, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void daily() {
        int count = 0;
        double sales = 0;
        DefaultTableModel model = (DefaultTableModel) report.getModel();
        Date selectedDate = daily.getDate(); // Get the selected date as a java.util.Date
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String selectedDateStr = dateFormat.format(selectedDate); // Convert the selected date to a string
        model.setRowCount(0);

        try (BufferedReader r = new BufferedReader(new FileReader("passenger.txt"))) {
            String line;
            while ((line = r.readLine()) != null) {
                String[] columns = line.split("\\|");
                Report r1 = new Report();
                r1.setDaily(selectedDateStr);
                if (r1.daily(columns[7])) { // Compare the string representation of the date
                    count++;
                    sales += Double.parseDouble(columns[4]);
                    Object[] rowData = new Object[model.getColumnCount()];
                    rowData[0] = columns[8];
                    rowData[1] = columns[6];
                    rowData[2] = columns[7];
                    rowData[3] = columns[4];
                    rowData[4] = columns[0];
                    model.addRow(rowData);
                    daily.setDate(null);
                }
            }
            if (count == 0) {
                JOptionPane.showMessageDialog(this, "No record in this day");
            }
            totalTicketQty.setText(Integer.toString(count));
            totalSales.setText(Double.toString(sales));
        } catch (IOException ex) {
            System.out.println("An error occurred while reading from the file.");
        }
    }

    private void monthly() {

        String selectedMonth = (String) monthly.getSelectedItem(); // Replace with your combo box selection
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
        DefaultTableModel model = (DefaultTableModel) report.getModel();
        model.setRowCount(0);

        int count = 0;
        double sales = 0.0;

        try (BufferedReader r = new BufferedReader(new FileReader("passenger.txt"))) {
            String line;
            while ((line = r.readLine()) != null) {
                String[] columns = line.split("\\|");
                Report r1 = new Report();
                r1.setMonthly(selectedMonth);
                Date date;
                try {
                    date = dateFormat.parse(columns[7]);
                    String month = new SimpleDateFormat("MMMM", Locale.ENGLISH).format(date);
                    if (r1.monthly(month)) {
                        count++;
                        sales += Double.parseDouble(columns[4]);

                        Object[] rowData = {
                            columns[8],
                            columns[6],
                            columns[7],
                            columns[4],
                            columns[0]
                        };
                        model.addRow(rowData);
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(ReportInterface.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (count == 0) {
                JOptionPane.showMessageDialog(this, "No record in this month.");
            }

            totalTicketQty.setText(Integer.toString(count));
            totalSales.setText(Double.toString(sales));
            monthly.setSelectedItem("--ALL--");

        } catch (IOException ex) {
            System.err.println("An error occurred while reading from the file: " + ex.getMessage());
        }
    }

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        if (daily.getDate() == null) {
            monthly();
        } else if (daily.getDate() != null && monthly.getSelectedItem().equals("--ALL--")) {
            daily();
        } else {
            JOptionPane.showMessageDialog(this, "Please filter only date or month. ");
        }
    }//GEN-LAST:event_viewActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        TrainTicketingSystem next = new TrainTicketingSystem();
        next.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private com.toedter.calendar.JDateChooser daily;
    private javax.swing.JTextField displayBalance;
    private javax.swing.JLabel filterdate;
    private javax.swing.JLabel filtermonth;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> monthly;
    private javax.swing.JTable report;
    private javax.swing.JLabel title;
    private javax.swing.JLabel totalPrice;
    private javax.swing.JTextField totalSales;
    private javax.swing.JLabel totalSold;
    private javax.swing.JTextField totalTicketQty;
    private javax.swing.JButton view;
    // End of variables declaration//GEN-END:variables
}
